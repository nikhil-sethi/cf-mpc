{
    "acados_include_path": "/home/nikhil/Software/acados/include",
    "acados_lib_path": "/home/nikhil/Software/acados/lib",
    "code_export_directory": "/home/nikhil/Nikhil/Projects/MPC/c_generated_code",
    "cython_include_dirs": [
        "/home/nikhil/.local/lib/python3.10/site-packages/numpy/core/include",
        "/usr/include/python3.10"
    ],
    "dims": {
        "np": 0,
        "nu": 4,
        "nx": 12,
        "nz": 0
    },
    "model": {
        "con_h_expr": null,
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "(mac(mac((x-[0, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0])',\n[[1200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100]],zeros(1x12)),(x-[0, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0]),0)+mac(mac(u',\n[[0.001, 0, 0, 0], \n [0, 0.001, 0, 0], \n [0, 0, 0.001, 0], \n [0, 0, 0, 0.001]],zeros(1x4)),u,0))",
        "cost_expr_ext_cost_0": "(mac(mac((x-[0, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0])',\n[[1200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100]],zeros(1x12)),(x-[0, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0]),0)+mac(mac(u',\n[[0.001, 0, 0, 0], \n [0, 0.001, 0, 0], \n [0, 0, 0.001, 0], \n [0, 0, 0, 0.001]],zeros(1x4)),u,0))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "mac(mac((x-[0, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0])',\n[[60000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 50000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 50000, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 2000, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 2000, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 5000, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.005, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.005, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000]],zeros(1x12)),(x-[0, 5, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0]),0)",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "(mac(\n[[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \n [0, 0, 0, 0, 9.8066, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, -9.8066, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],x,zeros(12x1))+mac(\n[[0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0.811263, 0.811263, 0.811263, 0.811263], \n [-24.8594, -24.8594, 24.8594, 24.8594], \n [-24.8594, 24.8594, 24.8594, -24.8594], \n [-1.53526, 1.53526, -1.53526, 1.53526]],u,zeros(12x1)))",
        "f_impl_expr": "(xdot-(mac(\n[[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \n [0, 0, 0, 0, 9.8066, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, -9.8066, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],x,zeros(12x1))+mac(\n[[0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0.811263, 0.811263, 0.811263, 0.811263], \n [-24.8594, -24.8594, 24.8594, 24.8594], \n [-24.8594, 24.8594, 24.8594, -24.8594], \n [-1.53526, 1.53526, -1.53526, 1.53526]],u,zeros(12x1))))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "particle_ode",
        "p": "0x0",
        "u": "u",
        "x": "x",
        "xdot": "xdot",
        "z": "0x0"
    },
    "parameter_values": [],
    "problem_class": "SIM",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.03,
        "collocation_type": "GAUSS_RADAU_IIA",
        "ext_fun_compile_flags": "-O2",
        "integrator_type": "ERK",
        "output_z": true,
        "sens_adj": false,
        "sens_algebraic": false,
        "sens_forw": true,
        "sens_hess": false,
        "sim_method_jac_reuse": 0,
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": 4,
        "sim_method_num_steps": 3
    }
}