{
    "acados_include_path": "/home/nikhil/Software/acados/include",
    "acados_lib_path": "/home/nikhil/Software/acados/lib",
    "code_export_directory": "/home/nikhil/Software/crazyflie/crazyflie-simulation/webots/controllers/crazyflie_controller_py_firmware_mpc/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_e": "BGH",
        "has_x0": true,
        "idxbu": [
            0,
            1,
            2,
            3
        ],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_e": [],
        "lbu": [
            -67,
            -67,
            -67,
            -67
        ],
        "lbx": [],
        "lbx_0": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [],
        "lh_e": [],
        "lphi": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_e": [],
        "ubu": [
            67,
            67,
            67,
            67
        ],
        "ubx": [],
        "ubx_0": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [],
        "uh_e": [],
        "uphi": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [],
        "ush_e": [],
        "usphi": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [],
        "Zl_e": [],
        "Zu": [],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [],
        "zl_e": [],
        "zu": [],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/nikhil/.local/lib/python3.10/site-packages/numpy/core/include",
        "/usr/include/python3.10"
    ],
    "dims": {
        "N": 50,
        "nbu": 4,
        "nbx": 0,
        "nbx_0": 12,
        "nbx_e": 0,
        "nbxe_0": 12,
        "ng": 0,
        "ng_e": 0,
        "nh": 0,
        "nh_e": 0,
        "np": 0,
        "nphi": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_e": 0,
        "ns": 0,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 0,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_e": 0,
        "nu": 4,
        "nx": 12,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "json_file": "acados_ocp.json",
    "model": {
        "con_h_expr": null,
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "(mac(mac((x-[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0])',\n[[12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0.001, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0.001, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0.001, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1e-05, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1e-05, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100]],zeros(1x12)),(x-[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]),0)+mac(mac(u',\n[[0.0001, 0, 0, 0], \n [0, 0.0001, 0, 0], \n [0, 0, 0.0001, 0], \n [0, 0, 0, 0.0001]],zeros(1x4)),u,0))",
        "cost_expr_ext_cost_0": "(mac(mac((x-[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0])',\n[[12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0.001, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0.001, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0.001, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1e-05, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1e-05, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100]],zeros(1x12)),(x-[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]),0)+mac(mac(u',\n[[0.0001, 0, 0, 0], \n [0, 0.0001, 0, 0], \n [0, 0, 0.0001, 0], \n [0, 0, 0, 0.0001]],zeros(1x4)),u,0))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "mac(mac((x-[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0])',\n[[600, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0.05, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0.05, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0.05, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 2000, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 2000, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 5000, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0005, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0005, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000]],zeros(1x12)),(x-[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]),0)",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "(mac(\n[[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \n [0, 0, 0, 0, 9.81, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, -9.81, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],x,zeros(12x1))+mac(\n[[0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0.659187, 0.659187, 0.659187, 0.659187], \n [-30.6051, -30.6051, 30.6051, 30.6051], \n [-30.6051, 30.6051, 30.6051, -30.6051], \n [-1.8901, 1.8901, -1.8901, 1.8901]],u,zeros(12x1)))",
        "f_impl_expr": "(xdot-(mac(\n[[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \n [0, 0, 0, 0, 9.81, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, -9.81, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],x,zeros(12x1))+mac(\n[[0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0, 0, 0, 0], \n [0.659187, 0.659187, 0.659187, 0.659187], \n [-30.6051, -30.6051, 30.6051, 30.6051], \n [-30.6051, 30.6051, 30.6051, -30.6051], \n [-1.8901, 1.8901, -1.8901, 1.8901]],u,zeros(12x1))))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "particle_ode",
        "p": "0x0",
        "u": "u",
        "x": "x",
        "xdot": "xdot",
        "z": "0x0"
    },
    "parameter_values": [],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.1,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_RADAU_IIA",
        "custom_templates": [],
        "custom_update_copy": true,
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "ERK",
        "levenberg_marquardt": 0.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "newton_iter": 3,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 1e-06,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_stat": 1e-06,
        "nlp_solver_type": "SQP_RTI",
        "num_stages": 4,
        "num_steps": 3,
        "print_level": 0,
        "qp_solver": "PARTIAL_CONDENSING_HPIPM",
        "qp_solver_cond_N": null,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "regularize_method": null,
        "shooting_nodes": null,
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 5.0,
        "time_steps": [
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1
        ]
    }
}